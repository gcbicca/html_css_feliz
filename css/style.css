header {
    display: flex;
    justify-content: space-between;
    background-color: #62C370;
    border-bottom: 10px solid #000;
    padding-left: 20px;
    padding-right: 20px;
    padding-top: 10px;
}
header>img {
    width: 60px;
    height: 60px;
}

nav {
    /* Podemos alinhar o conteúdo dessa caixa que são palavras porque estamos usando
    tags a (ancor) utilizando style sheets para o texto exemplo text-align: center;
    E o que define o tamanho da caixa é o conteúdo.*/
    /* O display inline
     - Mesma linha
     - não funciona o width e height
     - tem comportamento de palavra
     - possui o tamanho do conteúdo
    O display block
     - não ocupa a mesma linha
     pode-se definir width e height
     width 100% do pai
     - height conteúdo
     O display inline-block
      - mesma linha
      - width e height
      - comportamento de palavra 
      -  tamanho do conteudo (QUANDO NÃO SELECIONADO O WIDTH E HEIGHT*/
    
      text-align: right;
}
header>nav>a {
    /*Usando já o display inline-flex, e orietamos os objetos centralizados */
    display: inline-flex;
    align-items: center;
    font-family: "Fira Code", monospace;
    color: white;
    text-decoration: none;
    font-size: 20px;
    font-weight: 500;
    line-height: normal;
    margin-left: 30px;
}

header>nav>a::before {
    /* pseudo-elemento com os :: */
    content: '';
    background-color: #4C5B84;
    width: 10px;
    height: 10px;
    margin-right: 10px;
}

.button {
    /* No CSS se eu definir a altura e largura, não vai dar pq a tag a é setada inline
    precisa modificar para inline-block o display */
    display: inline-block;
    padding: 0px 20px 0px 20px;
    margin-bottom: 10px;
    margin-right: 0;
    /* quando tems uma linha podemos alinhar usando a altura da linha igual da caixa */
    line-height: 60px;
    background-color: #4C5B84;
    /* Box-shadow x y blurr */
    box-shadow: 5px 5px 0px 0px #000;
    /* transition é uma propriedade controla a animação do transform, pois a animação tem um continuum
    transition para duas propriedades
    transition: transform 100ms linear, opacity 200ms ease-in-out; */
    transition: transform 100ms linear
}
.button:hover {
    background-color: rgb(50, 69, 63);
    /* transform é uma animação que faz o elementro crescer 
    Outras propriedades mostradas:
    opacity: 0.5;*/
    transform: scale(1.08);
}

#div_banner {
    width: 627px;
    height: 184px;
    background-color: #3A4042;
    box-shadow: 10px 10px 0px 0px #000;
    display: flex;
    flex-direction: column;
    align-items: center;
    
}

#div_banner>h1 {
    font-family: "Press Start 2P";
    text-shadow: 4px 4px 0px #000;
    color: #62C370; 
    font-size: 40px;
    font-style: normal;
    font-weight: 400;
}

#div_banner>h2 {

    font-family: "Press Start 2P";
    text-shadow: 4px 4px 0px #000;
    color: #fff;
    font-size: 30px;
    font-style: normal;
    font-weight: 400;
}